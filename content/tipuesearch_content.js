var tipuesearch = {"pages": [{'title': 'About', 'text': '倉儲: https://github.com/mdecourse/cdbw12-3 \n group:1 \n Repository:\xa0 40723229 \xa0 | Site: \xa0 40723229 Repository:\xa0 40723230 \xa0 | Site: \xa0 40723230 Repository:\xa0 40723242 \xa0 | Site: \xa0 40723242 ---- group:2 \n Repository: \xa0 40623252 \xa0 | Site: \xa0 40623252 ---- group:3 \n Repository:\xa0 40723233 \xa0 | Site: \xa0 40723233 Repository:\xa0 40723218 \xa0 | Site: \xa0 40723218 Repository:\xa0 40723227 \xa0 | Site: \xa0 40723227 ---- group:4 \n Repository:\xa0 40723225 \xa0 | Site: \xa0 40723225 Repository:\xa0 40723212 \xa0 | Site: \xa0 40723212 Repository:\xa0 40723238 \xa0 | Site: \xa0 40723238 \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'group1', 'text': '', 'tags': '', 'url': 'group1.html'}, {'title': '40723229', 'text': '', 'tags': '', 'url': '40723229.html'}, {'title': '40723242', 'text': '', 'tags': '', 'url': '40723242.html'}, {'title': 'group2', 'text': '', 'tags': '', 'url': 'group2.html'}, {'title': '40623252', 'text': '', 'tags': '', 'url': '40623252.html'}, {'title': 'group3', 'text': '', 'tags': '', 'url': 'group3.html'}, {'title': '40723233', 'text': '', 'tags': '', 'url': '40723233.html'}, {'title': '40723218', 'text': '', 'tags': '', 'url': '40723218.html'}, {'title': '40723227', 'text': '', 'tags': '', 'url': '40723227.html'}, {'title': 'W11', 'text': 'Ubuntu設定及API連線 \n 操作影片: 操作步驟: 1.下載 vitualbox 、 ubuntu 、 CoppeliaSim 四輪車控制器檔案。 2.開啟vitualbox，匯入ubuntu。 3.設定虛擬主機的網路埠號。[NET:設定->網路->附加到(A)改成NAT->進階->連接埠轉送->設定三個埠號(22、8443、19999)]。 4.設定完成後啟動ubuntu。 5.輸入密碼kmol2020，並開啟lxterminal。 6.輸入xterm&開啟，並使用ctrl+右鍵將視窗放大。 7.依照步驟打開coppeliasim，輸入ls查看內容。 8.cd coppeliasim4_rev4->ls->cd CoppeliaSim_Edu_v4_0_0_Ubuntu18_04->ls->./coppeliaSim.sh。 9.開啟後打開檔案sdc.ttt。 10.開啟啟動器，並開啟下載好的CoppeliaSim四輪車控制器檔案。 11.將檔案中的car_model.py放入編譯器中，並執行。 12.打開CoppeliaSim中的模擬，四輪車開始繞圈即成功。 \n 以ssh對Github連線 操作影片: 1.到Y槽(Data)中的portablegit將sh_for_solvespace檔案複製並修改成sh.exe。 2.開啟start_mdecourse.bat並輸入sh及ssh-keygen -t rsa -b 4096 -C "使用者學號"產生key，打上key的產生區域。 3.下載 putty.7z SSH 連線工具組 ，利用其中的 puttygen.exe 將上述建立的 Openssh keys 轉為 putty 可以辨識的格式。 4.修改啟動的 start.bat 加入下列設定: \xa0 \xa0 \xa0 \xa0set GIT_HOME=%Disk%:\\portablegit\\bin\\ \xa0 \xa0 \xa0 \xa0set GIT_SSH=%Disk%:\\putty\\plink.exe 修改完成後,重新啟動。 5.將要使用 ssh 連線的倉儲 .git 中的 config 檔案中的 url 設定改為 ssh 連線格式:url = git@github.com:倉儲名稱/cad2019.git。 6.開啟 putty.exe 建立一個 session 名稱為 github.com, 其中指定 Connection -> Proxy 與 Connection -> SSH -> Auth。 7.將下列字串加入編輯器並存儲到y:\\home\\.ssh\\config: Host github.com \xa0 \xa0 User git \xa0 \xa0 Port 22 \xa0 \xa0 Hostname github.com \xa0 \xa0 TCPKeepAlive yes \xa0 \xa0 IdentitiesOnly yes 8.將所建立的OpenSSH格式的public key內容,送到Github帳號SSH settings中。 9.完成。 \n', 'tags': '', 'url': 'W11.html'}, {'title': 'Assignment', 'text': 'Assignment1: \n https://drive.google.com/open?id=17OPxqxjxZZ5O4yflej72x060fdII4zVc \n Assignment2: \n https://drive.google.com/open?id=17jSIkT6aVfdJNgnMjEeU5xTDtbZOdHww \n \n', 'tags': '', 'url': 'Assignment.html'}, {'title': 'group4', 'text': '', 'tags': '', 'url': 'group4.html'}, {'title': '40723225', 'text': '', 'tags': '', 'url': '40723225.html'}, {'title': '4072321', 'text': '', 'tags': '', 'url': '4072321.html'}, {'title': '40723238', 'text': '\n', 'tags': '', 'url': '40723238.html'}]};